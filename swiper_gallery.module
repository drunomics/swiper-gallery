<?php

/**
 * @file
 * Module file.
 */

use Drupal\swiper_gallery\Plugin\Field\FieldFormatter\SwiperGalleryFormatter;

/**
 * Implements hook_theme().
 */
function swiper_gallery_theme($existing, $type, $theme, $path) {
  return [
    // The main gallery template.
    'swiper_gallery' => [
      'variables' => [
        'gallery_id' => '',
        'paragraph_id' => '',
        'slide_id_prefix' => '',
        'type' => 'fs-mobile-scroll',
        'title' => '',
        'preview_headline' => '',
        'preview' => '',
        'slides' => [],
        'thumbnails' => [],
        'viewmode' => 'default',
      ],
    ],
    // Breaker slide.
    'swiper_gallery_breaker' => [
      'variables' => [
        'id' => '',
        'breaker' => NULL,
        'variant' => '',
      ],
    ],
    // Headline above the gallery.
    'swiper_gallery_headline' => [
      'variables' => [
        'title' => '',
        'counter' => '',
      ],
    ],
    // Preview image with the launcher button.
    'swiper_gallery_preview' => [
      'variables' => [
        'preview_type' => 'thumbs',
        'launcher_main_text' => '',
        'launcher_thumbnails_text' => '',
        'preview_thumbnails_media' => NULL,
        'preview_thumbnails_thumbs' => [],
        'image_count' => 0,
        'media' => NULL,
      ],
    ],
    // A single slide inside the gallery.
    'swiper_gallery_slide' => [
      'variables' => [
        'id' => '',
        'slide_id_prefix' => '',
        'variant' => '',
        'classes' => '',
        'attributes' => '',
        'media' => '',
      ],
    ],
    // The gallery's thumbnails.
    'swiper_gallery_thumbnail' => [
      'variables' => [
        'id' => '',
        'image' => '',
        'slide_id_prefix' => '',
        'variant' => 'imageonly',
      ],
    ],
  ];
}

/**
 * Implements template_preprocess_image().
 */
function swiper_gallery_preprocess_image(&$variables) {
  static $slide_styles = [];

  // Collect the image styles which are used for the slides.
  if (empty($slide_styles)) {
    $gallery_view_modes = \Drupal::service('entity_display.repository')
      ->getViewModeOptionsByBundle('media', 'gallery');

    foreach (array_keys($gallery_view_modes) as $gallery_view_mode) {
      $gallery_renderer = \Drupal::service('entity_type.manager')
        ->getStorage('entity_view_display')
        ->load('media.gallery.' . $gallery_view_mode)
        ->getRenderer('field_media_images');

      if ($gallery_renderer instanceof SwiperGalleryFormatter) {
        $gallery_settings = $gallery_renderer->getSettings();
        $slide_view_mode = $gallery_settings['view_mode_gallery_slide'];
        $slide_settings = \Drupal::service('entity_type.manager')
          ->getStorage('entity_view_display')
          ->load('media.image.' . $slide_view_mode)
          ->getRenderer('field_image')
          ->getSettings();

        if (!empty($slide_settings['image_style'])) {
          $slide_styles[] = $slide_settings['image_style'];
        }
      }
    }
  }

  // For all gallery images remove the src attribute and replace it with
  // data-src attribute and add class swiper-lazy to be able to lazy load
  // images.
  if (in_array($variables['style_name'], $slide_styles)) {
    $variables['attributes']['data-src'] = $variables['attributes']['src'];
    $variables['attributes']['class'] = 'swiper-lazy';
    unset($variables['attributes']['src']);

    // Don't show alternative text or title, because it's shown while loading
    // the image.
    unset($variables['attributes']['alt']);
    unset($variables['attributes']['title']);

    // If width or height of the image is not calculated correctly and is set to
    // 0 unset these attributes as those attributes with a 0-value will prevent
    // lazy loading of the images with the swiper gallery.
    if (empty($variables['attributes']['width'])) {
      unset($variables['attributes']['width']);
    }
    if (empty($variables['attributes']['height'])) {
      unset($variables['attributes']['height']);
    }
  }
}
